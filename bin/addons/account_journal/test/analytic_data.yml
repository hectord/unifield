-
  I create an Expense Account Type.
-
  !record {model: account.account.type, id: account_account_type_expense0}:
    close_method: unreconciled
    code: expense
    name: Expense
    sign: 1
-
  I create a 6101 Expense Account.
-
  !record {model: account.account, id: account_account_expense0}:
    code: '6101-expense-test'
    company_id: base.main_company
    currency_mode: current
    name: Expense Account
    type: other
    user_type: account_account_type_expense0
    activation_date: !eval datetime.today().strftime('%Y-01-01')
    default_destination_id: analytic_distribution.analytic_account_destination_operation
    destination_ids: [analytic_distribution.analytic_account_destination_operation, analytic_distribution.analytic_account_destination_support]
-
  I create a link between 6101 expense account and Operation destination
-
  !record {model: account.destination.link, id: tuple_operation_6101}:
    account_id: account_account_expense0
    destination_id: analytic_distribution.analytic_account_destination_operation
-
  I create a link between 6101 expense account and Support destination
-
  !record {model: account.destination.link, id: tuple_support_6101}:
    account_id: account_account_expense0
    destination_id: analytic_distribution.analytic_account_destination_support
-
  I create an analytic account attached to OC (Operation Center) named Gabon
-
  !record {model: account.analytic.account, id: analytic_account_gabon}:
    name: "Gabon"
    currency_id: 1
    code: GAB
    type: normal
    category: OC
    parent_id: analytic_distribution.analytic_account_project
    date: !eval "'%s-01-01' %(datetime.now().year + 2)"
-
  I create an analytic account attached to OC (Operation Center) named Kenya
-
  !record {model: account.analytic.account, id: analytic_account_kenya}:
    name: "Kenya"
    currency_id: 1
    code: KEN
    type: normal
    category: OC
    parent_id: analytic_distribution.analytic_account_project
    date: !eval "'%s-01-01' %(datetime.now().year + 2)"
-
  I create an FP analytic account named Gabon Hospital attached to Gabon CC
-
  !record {model: account.analytic.account, id: analytic_account_fp_gabon_hospital}:
    name: "Gabon Hospital"
    currency_id: 1
    code: GABH
    type: normal
    category: FUNDING
    parent_id: analytic_distribution.analytic_account_funding_pool
    date: !eval "'%s-01-01' %(datetime.now().year + 2)"
    cost_center_ids: [analytic_account_gabon]
    tuple_destination_account_ids: [tuple_operation_6101]
-
  I create an FP analytic account named Kenya AIDS attached to Kenya CC
-
  !record {model: account.analytic.account, id: analytic_account_fp_kenya_aids}:
    name: "Kenya AIDS"
    currency_id: 1
    code: KENA
    type: normal
    category: FUNDING
    parent_id: analytic_distribution.analytic_account_funding_pool
    date: !eval "'%s-01-01' %(datetime.now().year + 2)"
    cost_center_ids: [analytic_account_kenya]
    tuple_destination_account_ids: [tuple_support_6101]
-
  I create a global analytical distribution
-
  !record {model: analytic.distribution, id: global_distrib_1}:
    name: GLOB DISTR 1
-
  I create a cost center distribution line for gabon
-
  !record {model: cost.center.distribution.line, id: cost_center_gabon}:
    name: CC Line 1
    amount: 0.0
    percentage: 75.0
    currency_id: 1
    analytic_id: analytic_account_gabon
    distribution_id: global_distrib_1
    destination_id: analytic_distribution.analytic_account_destination_operation
-
  I create a cost center distribution line for kenya
-
  !record {model: cost.center.distribution.line, id: cost_center_kenya}:
    name: CC Line 2
    amount: 0.0
    percentage: 25.0
    currency_id: 1
    analytic_id: analytic_account_kenya
    distribution_id: global_distrib_1
    destination_id: analytic_distribution.analytic_account_destination_support
-
  I create a funding pool distribution line for gabon
-
  !record {model: funding.pool.distribution.line, id: funding_pool_gabon}:
    name: FP Line 1
    amount: 0.0
    percentage: 75.0
    currency_id: 1
    analytic_id: analytic_account_fp_gabon_hospital
    distribution_id: global_distrib_1
    cost_center_id: analytic_account_gabon
    destination_id: analytic_distribution.analytic_account_destination_operation
-
  I create a funding pool distribution line for kenya
-
  !record {model: funding.pool.distribution.line, id: funding_pool_kenya}:
    name: FP Line 2
    amount: 0.0
    percentage: 25.0
    currency_id: 1
    analytic_id: analytic_account_fp_kenya_aids
    cost_center_id: analytic_account_kenya
    destination_id: analytic_distribution.analytic_account_destination_support
    distribution_id: global_distrib_1
-
  I overwrite periods with right number and open them
-
  !python {model: account.period}: |
    import datetime
    period_ids = self.search(cr, uid, [], order='date_start, name')
    for p in self.browse(cr, uid, period_ids):
      self.write(cr, uid, [p.id], {'number': int(datetime.datetime.strptime(p.date_start, '%Y-%m-%d').strftime('%m'))})
    self.action_set_state(cr, uid, period_ids, {'state': 'draft'})
