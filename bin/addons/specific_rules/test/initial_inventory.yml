-
  In order to test the initial inventory document, I'll create a new initial inventory and confirm it
-
    Creating a product.nomenclature record
- 
  !record {model: product.nomenclature, id: product_nomenclature_initial0}:
    name: test init 0
- 
  Creating a product.nomenclature record
- 
  !record {model: product.nomenclature, id: product_nomenclature_initial1}:
    level: 1
    name: test init 1
    
- 
  Creating a product.nomenclature record
- 
  !record {model: product.nomenclature, id: product_nomenclature_initial2}:
    level: 2
    name: test init 2
    parent_id: product_nomenclature_initial1
- 
  Creating a product.nomenclature record
- 
  !record {model: product.nomenclature, id: product_nomenclature_initial3}:
    level: 3
    name: test init 3
    parent_id: product_nomenclature_initial2
-  
  Creating a product.category record
-
  !record {model: product.category, id: product_category_initial1}:
    name: Initial1
    family_id: product_nomenclature_initial2
- 
  Creating a product.product record
- 
  !record {model: product.product, id: product_product_initial0}:
    alert_time: 0.0
    categ_id: product.cat0
    cost_method: standard
    default_code: test2
    life_time: 0.0
    mes_type: fixed
    name: test product
    name_template: test product
    nomen_manda_0: product_nomenclature_initial0
    nomen_manda_1: product_nomenclature_initial1
    nomen_manda_2: product_nomenclature_initial2
    nomen_manda_3: product_nomenclature_initial3
    procure_method: make_to_stock
    removal_time: 0.0
    seller_delay: '1'
    seller_qty: 0.0
    standard_price: 1.0
    subtype: single
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    use_time: 0.0
    valuation: manual_periodic
    volume: 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    international_status: product_attributes.int_1
-
  Creating a new initial inventory
-
  !record {model: initial.stock.inventory, id: init1}:
    name: test initial inventory
    inventory_line_id:
      - product_id: product_product_initial0
        average_cost: 50.00
        location_id: stock.stock_location_stock
        product_qty: 250.00
-
  Confirm the inventory
-
  !python {model: initial.stock.inventory}: |
    self.action_confirm(cr, uid, ref('init1'))
    self.action_done(cr, uid, ref('init1'))
-
  Check if the standard price of the product is ok
-
  !assert {model: product.product, id: product_product_initial0}:
    - standard_price == 50.00, "The standard price of the product hasn't been updated"
-
  Check if the product qty in the Stock location is ok
-
  !python {model: product.product}: |
    context = {'location_id': ref('stock.stock_location_stock'), 'compute_child': False}
    product = self.browse(cr, uid, ref('product_product_initial0'), context=context)
    assert product.qty_available == 250.00, "The quantity of product in Stock hasn't been updated"
