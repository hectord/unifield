    
- 
  Creating a res.partner record
- 
  !record {model: res.partner, id: res_partner_a0}:
    credit_limit: 0.0
    debit_limit: 0.0
    name: A
    supplier: true
    
- 
  Creating a res.partner.address record
- 
  !record {model: res.partner.address, id: res_partner_address_0}:
    partner_id: res_partner_a0
    street: A
    
- 
  Creating a res.partner record
- 
  !record {model: res.partner, id: res_partner_b0}:
    credit_limit: 0.0
    debit_limit: 0.0
    name: B
    supplier: true
    
    
- 
  Creating a res.partner.address record
- 
  !record {model: res.partner.address, id: res_partner_address_1}:
    partner_id: res_partner_b0
    street: B
    
-
  I create product template .
-
  !record {model: product.template, id: product_template_p0}:
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: P
    procure_method: make_to_stock
    standard_price: 160.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    
- 
  Creating a product.product record
- 
  !record {model: product.product, id: product_product_p0}:
    
    standard_price: 1.0
    valuation: manual_periodic
    volume: 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    product_tmpl_id: product_template_p0
    international_status: product_attributes.int_1
    
- 
  Creating a sale.order record
- 
  !record {model: sale.order, id: sale_order_so0}:
    amount_tax: 0.0
    amount_total: 1.0
    amount_untaxed: 1.0
    company_id: base.main_company
    date_order: '2011-04-13'
    invoice_quantity: order
    order_policy: manual
    partner_id: res_partner_a0
    partner_invoice_id: res_partner_address_0
    partner_order_id: res_partner_address_0
    partner_shipping_id: res_partner_address_0
    picking_policy: direct
    pricelist_id: product.list0
    shop_id: sale.shop
    priority: normal
    categ: medical
    
    
- 
  Creating a sale.order.line record
- 
  !record {model: sale.order.line, id: sale_order_line_p0}:
    company_id: base.main_company
    delay: 7.0
    name: P
    order_id: sale_order_so0
    order_partner_id: res_partner_a0
    price_unit: 1.0
    product_id: product_product_p0
    product_uom: product.product_uom_unit
    product_uom_qty: 1.0
    salesman_id: base.user_admin
    state: draft
    th_weight: 0.0
    type: make_to_stock
    
-

  I check the sourcing line

-
  !python {model: stock.forecast}: |
    import time
    sf = self.create(cr, uid, {'product_id': ref("product_product_p0"),}, context={})
    # test onchange
    self.onchange(cr, uid, [sf], ref("product_product_p0"), False, False, False, context=None)
    # update date planned of sol
    date = time.strftime('%Y-%m-%d')
    sol_obj = self.pool.get('sale.order.line')
    sol_obj.write(cr, uid, [ref("sale_order_line_p0"),], {'date_planned':date,}, context=None)
    # call forecast
    self.do_forecast(cr, uid, [sf], context=None)
    # call print
    self.do_print(cr, uid, [sf], context=None)
    # call export
    self.do_export(cr, uid, [sf], context=None)
    # call graph
    self.do_graph(cr, uid, [sf], context=None)
