-
  In order to test the de-activation of a product,
  we will create a product and try to de-activate it
-
  Create the product P15
-
  !record {model: product.product, id: product15}:
    categ_id: product_cat1
    name: P15
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
-
  Then, we a create an IR
-
  !record {model: sale.order, id: ir2}:
    name: IR2
    procurement_request: True
    picking_policy: direct
    invoice_quantity: order
    pricelist_id: purchase.list0
    order_type: regular
    order_line:
    - product_uom: product.product_uom_unit
      product_id: product15
      price_unit: 1.50
      product_uom_qty: 1
      name: P15
      date_planned: !eval time.strftime('%Y-%m-%d')
-
  Validate the IR
-
  !workflow {model: sale.order, action: procurement_validate, ref: ir2}
-
  Then, we try to de-activate this product
-
  !python {model: product.product}: |
    res = self.deactivate_product(cr, uid, ref('product15'))
    assert type(res) == type({}) and res.get('res_model') == 'product.deactivation.error', "No error occured when the de-activation of the product"
