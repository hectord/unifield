-
  In order to test the grouped by supplier and requestor feature,
  we will create 3 customers, 2 suppliers and 5 products (with stock or not
  and mini stock rules or not)
-
  Creation of customers
-
  Create the first customer
-
  !record {model: res.partner, id: gr_cust1}:
    credit_limit: 0.0
    debit_limit: 0.0
    name: A
    supplier: false
    customer: true
    customer_lt: 1
-
  Create an address for this first customer
-
  !record {model: res.partner.address, id: gr_ad_cust1}:
    name: A
    partner_id: gr_cust1
-
  Create a second customer
-
  !record {model: res.partner, id: gr_cust2}:
    credit_limit: 0.0
    debit_limit: 0.0
    name: B
    supplier: false
    customer: true
    customer_lt: 1
-
  Create an address for this second customer
-
  !record {model: res.partner.address, id: gr_ad_cust2}:
    name: B
    partner_id: gr_cust2
-
  Create a second customer
-
  !record {model: res.partner, id: gr_cust3}:
    credit_limit: 0.0
    debit_limit: 0.0
    name: C
    supplier: false
    customer: true
    customer_lt: 1
-
  Create an address for this third customer
-
  !record {model: res.partner.address, id: gr_ad_cust3}:
    name: C
    partner_id: gr_cust3
-
  Creation of suppliers
-
  Create the first supplier
-
  !record {model: res.partner, id: gr_supplier1}:
    credit_limit: 0.0
    debit_limit: 0.0
    name: SA
    supplier: true
    customer: false
    customer_lt: 1
    po_by_project: project
-
  Create an address for this first supplier
-
  !record {model: res.partner.address, id: gr_ad_supplier1}:
    name: SA
    partner_id: gr_supplier1
-
  Create the second supplier
-
  !record {model: res.partner, id: gr_supplier2}:
    credit_limit: 0.0
    debit_limit: 0.0
    name: SB
    supplier: true
    customer: false
    customer_lt: 1
    po_by_project: all
-
  Create an address for this second supplier
-
  !record {model: res.partner.address, id: gr_ad_supplier2}:
    name: SB
    partner_id: gr_supplier2
-
  Creation of products
-
  Creation of Product 1
- 
  !record {model: product.template, id: gr_template1}:
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: P1
    procure_method: make_to_order
    standard_price: 160.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
- 
  Creating a product.product record
- 
  !record {model: product.product, id: gr_product1}:
    
    standard_price: 1.0
    valuation: manual_periodic
    volume: 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    product_tmpl_id: gr_template1
    international_status: product_attributes.int_1
- 
  Creating a product.supplierinfo record
- 
  !record {model: product.supplierinfo, id: gr_si_product1}:
    delay: 1
    min_qty: 0.0
    name: gr_supplier1
    product_id: gr_template1
-
  Creation of Product 2
- 
  !record {model: product.template, id: gr_template2}:
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: P2
    procure_method: make_to_order
    standard_price: 160.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
- 
  Creating a product.product record
- 
  !record {model: product.product, id: gr_product2}:
    
    standard_price: 1.0
    valuation: manual_periodic
    volume: 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    product_tmpl_id: gr_template2
    international_status: product_attributes.int_1
- 
  Creating a product.supplierinfo record
- 
  !record {model: product.supplierinfo, id: gr_si_product2}:
    delay: 1
    min_qty: 0.0
    name: gr_supplier2
    product_id: gr_template2
-
  Creation of Product 3
- 
  !record {model: product.template, id: gr_template3}:
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: P3
    procure_method: make_to_order
    standard_price: 160.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
- 
  Creating a product.product record
- 
  !record {model: product.product, id: gr_product3}:
    
    standard_price: 1.0
    valuation: manual_periodic
    volume: 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    product_tmpl_id: gr_template3
    international_status: product_attributes.int_1
- 
  Creating a product.supplierinfo record
- 
  !record {model: product.supplierinfo, id: gr_si_product3}:
    delay: 1
    min_qty: 0.0
    name: gr_supplier1
    product_id: gr_template3
-
  Creation of Product 4
- 
  !record {model: product.template, id: gr_template4}:
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: P4
    procure_method: make_to_stock
    standard_price: 160.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
- 
  Creating a product.product record
- 
  !record {model: product.product, id: gr_product4}:
    
    standard_price: 1.0
    valuation: manual_periodic
    volume: 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    product_tmpl_id: gr_template4
    international_status: product_attributes.int_1
- 
  Creating a product.supplierinfo record
- 
  !record {model: product.supplierinfo, id: gr_si_product4}:
    delay: 1
    min_qty: 0.0
    name: gr_supplier2
    product_id: gr_template4
-
  Creation of Product 5
- 
  !record {model: product.template, id: gr_template5}:
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: P5
    procure_method: make_to_stock
    standard_price: 160.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
- 
  Creating a product.product record
- 
  !record {model: product.product, id: gr_product5}:
    
    standard_price: 1.0
    valuation: manual_periodic
    volume: 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    product_tmpl_id: gr_template5
    international_status: product_attributes.int_1
- 
  Creating a product.supplierinfo record
- 
  !record {model: product.supplierinfo, id: gr_si_product5}:
    delay: 1
    min_qty: 0.0
    name: gr_supplier2
    product_id: gr_template5
-
  Creation of an inventory for 100 P5 and 5 P4
-
  !record {model: stock.inventory, id: gr_inventory1}:
    name: GR inventory
    date: !eval time.strftime('%Y-%m-%d')
    inventory_line_id:
      - location_id: stock.stock_location_stock
        product_uom: product.product_uom_unit
        product_id: gr_product5
        product_qty: 100
      - location_id: stock.stock_location_stock
        product_uom: product.product_uom_unit
        product_id: gr_product4
        product_qty: 5
-
  Validate the inventory
-
  !python {model: stock.inventory}: |
    self.action_confirm(cr, uid, [ref('gr_inventory1')], context=context)
    self.action_done(cr, uid, [ref('gr_inventory1')], context=context)
-
  Creation of a mini stock rules for P4
-
  !record {model: stock.warehouse.orderpoint, id: gr_orderpoint_4}:
    name: Orderpoint
    warehouse_id: stock.warehouse0
    product_id: gr_product4
    product_uom: product.product_uom_unit
    location_id: stock.stock_location_stock
    product_min_qty: 10
    product_max_qty: 100
    qty_multiple: 1
    active: True 
-
  Creation of sales orders
-
  Create the first sale order
-
  !record {model: sale.order, id: gr_so1}:
    company_id: base.main_company
    date_order: !eval time.strftime('%Y-%m-%d')
    invoice_quantity: order
    order_policy: manual
    partner_id: gr_cust1
    partner_invoice_id: gr_ad_cust1
    partner_order_id: gr_ad_cust1
    partner_shipping_id: gr_ad_cust1
    picking_policy: direct
    pricelist_id: product.list0
    shop_id: sale.shop
    priority: normal
    categ: medical
-
  Create a Sale Order Line
-
  !record {model: sale.order.line, id: gr_so1_l1}:
    product_uom: product.product_uom_unit
    product_id: gr_product1
    order_id: gr_so1
    price_unit: 1
    product_uom_qty: 10
    date_planned: !eval time.strftime('%Y-%m-%d')
    type: make_to_order
-
  Create a Sale Order Line
-
  !record {model: sale.order.line, id: gr_so1_l2}:
    product_uom: product.product_uom_unit
    product_id: gr_product2
    order_id: gr_so1
    price_unit: 1
    product_uom_qty: 25
    date_planned: !eval time.strftime('%Y-%m-%d')
    type: make_to_order
-
  Create a Sale Order Line
-
  !record {model: sale.order.line, id: gr_so1_l3}:
    product_uom: product.product_uom_unit
    product_id: gr_product3
    order_id: gr_so1
    price_unit: 1
    product_uom_qty: 20
    date_planned: !eval time.strftime('%Y-%m-%d')
    type: make_to_order
-
  Create the second sale order
-
  !record {model: sale.order, id: gr_so2}:
    company_id: base.main_company
    date_order: !eval time.strftime('%Y-%m-%d')
    invoice_quantity: order
    order_policy: manual
    partner_id: gr_cust2
    partner_invoice_id: gr_ad_cust2
    partner_order_id: gr_ad_cust2
    partner_shipping_id: gr_ad_cust2
    picking_policy: direct
    pricelist_id: product.list0
    shop_id: sale.shop
    priority: normal
    categ: medical
-
  Create a Sale Order Line
-
  !record {model: sale.order.line, id: gr_so2_l1}:
    product_uom: product.product_uom_unit
    product_id: gr_product1
    order_id: gr_so2
    price_unit: 1
    product_uom_qty: 15
    date_planned: !eval time.strftime('%Y-%m-%d')
    type: make_to_order
-
  Create a Sale Order Line
-
  !record {model: sale.order.line, id: gr_so2_l2}:
    product_uom: product.product_uom_unit
    product_id: gr_product2
    order_id: gr_so2
    price_unit: 1
    product_uom_qty: 25
    date_planned: !eval time.strftime('%Y-%m-%d')
    type: make_to_order
-
  Create a Sale Order Line
-
  !record {model: sale.order.line, id: gr_so2_l3}:
    product_uom: product.product_uom_unit
    product_id: gr_product3
    order_id: gr_so2
    price_unit: 1
    product_uom_qty: 30
    date_planned: !eval time.strftime('%Y-%m-%d')
    type: make_to_order
-
  Create a Sale Order Line
-
  !record {model: sale.order.line, id: gr_so2_l4}:
    product_uom: product.product_uom_unit
    product_id: gr_product4
    order_id: gr_so2
    price_unit: 1
    product_uom_qty: 40
    date_planned: !eval time.strftime('%Y-%m-%d')
    type: make_to_stock
-
  Create a Sale Order Line
-
  !record {model: sale.order.line, id: gr_so2_l5}:
    product_uom: product.product_uom_unit
    product_id: gr_product5
    order_id: gr_so2
    price_unit: 1
    product_uom_qty: 5
    date_planned: !eval time.strftime('%Y-%m-%d')
    type: make_to_stock
-
  Create the third sale order
-
  !record {model: sale.order, id: gr_so3}:
    company_id: base.main_company
    date_order: !eval time.strftime('%Y-%m-%d')
    invoice_quantity: order
    order_policy: manual
    partner_id: gr_cust3
    partner_invoice_id: gr_ad_cust3
    partner_order_id: gr_ad_cust3
    partner_shipping_id: gr_ad_cust3
    picking_policy: direct
    pricelist_id: product.list0
    shop_id: sale.shop
    priority: normal
    categ: medical
-
  Create a Sale Order Line
-
  !record {model: sale.order.line, id: gr_so3_l1}:
    product_uom: product.product_uom_unit
    product_id: gr_product1
    order_id: gr_so3
    price_unit: 1
    product_uom_qty: 5
    date_planned: !eval time.strftime('%Y-%m-%d')
    type: make_to_order
-
  Create a Sale Order Line
-
  !record {model: sale.order.line, id: gr_so3_l2}:
    product_uom: product.product_uom_unit
    product_id: gr_product2
    order_id: gr_so3
    price_unit: 1
    product_uom_qty: 12
    date_planned: !eval time.strftime('%Y-%m-%d')
    type: make_to_order
-
  Create a Sale Order Line
-
  !record {model: sale.order.line, id: gr_so3_l3}:
    product_uom: product.product_uom_unit
    product_id: gr_product3
    order_id: gr_so3
    price_unit: 1
    product_uom_qty: 5
    date_planned: !eval time.strftime('%Y-%m-%d')
    type: make_to_order
-
  Create a Sale Order Line
-
  !record {model: sale.order.line, id: gr_so3_l4}:
    product_uom: product.product_uom_unit
    product_id: gr_product4
    order_id: gr_so3
    price_unit: 1
    product_uom_qty: 5
    date_planned: !eval time.strftime('%Y-%m-%d')
    type: make_to_stock
-
  Create a Purchase Order for gr_supplier1
-
  !record {model: purchase.order, id: po_gr_sp1}:
    partner_id: gr_supplier1
    name: Regular1
    company_id: base.main_company
    date_order: !eval time.strftime('%Y-%m-%d')
    invoice_method: order
    location_id: stock.stock_location_stock
    partner_address_id: gr_ad_supplier1
    pricelist_id: purchase.list0
    customer_id: gr_cust1
-
  Update the delivery requested date of the PO
-
  !python {model: purchase.order}: |
    import datetime
    from dateutil.relativedelta import relativedelta
    req_date = (datetime.datetime.today() + relativedelta(days=1)).strftime('%Y-%m-%d 00:00:00')
    self.write(cr, uid, [ref('po_gr_sp1')], {'delivery_requested_date': req_date})
-
  I validate the sale order
-
  !python {model: sale.order}: |
    import netsvc
    wf_service = netsvc.LocalService("workflow")
    wf_service.trg_validate(uid, 'sale.order', ref("gr_so1"), 'order_validated', cr)
    wf_service.trg_validate(uid, 'sale.order', ref("gr_so2"), 'order_validated', cr)
    wf_service.trg_validate(uid, 'sale.order', ref("gr_so3"), 'order_validated', cr)
    wf_service.trg_validate(uid, 'sale.order', ref("gr_so1"), 'order_confirm', cr)
    wf_service.trg_validate(uid, 'sale.order', ref("gr_so2"), 'order_confirm', cr)
    wf_service.trg_validate(uid, 'sale.order', ref("gr_so3"), 'order_confirm', cr)
-
  Run the scheduler
-
  !python  {model: procurement.order}: |
    self.run_scheduler(cr, uid , context={'update_mode':'init'})
-
  !python {model: purchase.order}: |
    s1_po_ids = self.search(cr, uid, [('partner_id', '=', ref('gr_supplier1'))])
    s2_po_ids = self.search(cr, uid, [('partner_id', '=', ref('gr_supplier2'))])
    assert len(s1_po_ids) == 3, "Number of PO for Supplier 1 is not correct (expected : 3 :: result : %s)" % len(s1_po_ids)
    assert len(s2_po_ids) == 1, "Number of PO for Supplier 2 is not correct (expected : 1 :: result : %s)" % len(s2_po_ids)
