-
  Product A
- 
  !record {model: product.product, id: product_KCL}:
    name: product_KCL
    cost_method: average
    procure_method: make_to_order
    subtype: kit
    seller_ids:
      - sequence: 10
        min_qty: 0.00
        name: partner_A
-
  Create a Kit Composition List 1 (KCL1)
-
  !record {model: composition.kit, id: kcl1}:
    composition_product_id: product_KCL
    composition_reference: test
    composition_creation_date: !eval time.strftime('%Y-%m-%d')
    composition_type: real
-
  Import Kit Composition lines in English
-
  !python {model: composition.kit}: |
    import addons, base64, logging
    context.update({'yml_test': True, 'lang': 'en_MF'})
    logging.getLogger('tests').log(logging.TEST, 'We import composition_kit.xls.')
    # get the file path
    file_path = addons.get_module_resource('msf_doc_import','test','import_files_for_testing', 'composition_kit.xls')
    file = open(file_path, 'r')
    file64 = base64.b64encode(file.read())
    self.write(cr, uid, ref("kcl1"), {'file_to_import': file64}, context=context)
    self.import_file(cr, uid, [ref("kcl1")], context=context)
-
  Import Kit Composition lines in French
-
  !python {model: composition.kit}: |
    import addons, base64, logging
    context.update({'yml_test': True, 'lang': 'en_FR'})
    logging.getLogger('tests').log(logging.TEST, 'We import composition_kit.xls.')
    # get the file path
    file_path = addons.get_module_resource('msf_doc_import','test','import_files_for_testing', 'composition_kit.xls')
    file = open(file_path, 'r')
    file64 = base64.b64encode(file.read())
    self.write(cr, uid, ref("kcl1"), {'file_to_import': file64}, context=context)
    self.import_file(cr, uid, [ref("kcl1")], context=context)
