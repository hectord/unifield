-
  Partner A
- 
  !record {model: res.partner, id: partner_A}:
    name: A
    supplier: true
    customer: true
- 
  Address for Partner A
- 
  !record {model: res.partner.address, id: address_A}:
    partner_id: partner_A
    street: AddressA
-
  Product A
- 
  !record {model: product.product, id: product_A}:
    name: ProdA
    type: service_recep
    procure_method: make_to_order
    seller_ids:
      - sequence: 10
        min_qty: 0.00
        name: partner_A
    international_status: product_attributes.int_1
-
  I change the type for product (Stockable Product)
-
  !python {model: product.product}: |
    self.write(cr, uid, [ref("product_A")], {'type': 'product'}, context=context)
-
  I change the procurement method to make_to_stock and then back to make_to_order
-
  !python {model: product.product}: |
    self.write(cr, uid, [ref("product_A")], {'procure_method': 'make_to_stock'}, context=context)
    self.write(cr, uid, [ref("product_A")], {'procure_method': 'make_to_order'}, context=context)
-
  I change the type for service_recep (Service with Reception) and then the procurement method to make_to_stock, should fail
-
  !python {model: product.product}: |
    from osv import osv
    self.write(cr, uid, [ref("product_A")], {'type': 'service_recep'}, context=context)
    try:
      self.write(cr, uid, [ref("product_A")], {'procure_method': 'make_to_stock'}, context=context)
    except osv.except_osv, e:
      # ok the constraint has been raised
      #print e
      pass
    else:
      assert False, 'The constraint: "You must select on order procurement method for Service with Reception products." has not been triggered.'
