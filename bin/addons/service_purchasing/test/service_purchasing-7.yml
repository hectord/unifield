-
  Partner A
- 
  !record {model: res.partner, id: partner_A}:
    name: A
    supplier: true
    customer: true
- 
  Address for Partner A
- 
  !record {model: res.partner.address, id: address_A}:
    partner_id: partner_A
    street: AddressA
-
  Product A
- 
  !record {model: product.product, id: product_A}:
    name: ProdA
    type: service_recep
    procure_method: make_to_order
    seller_ids:
      - sequence: 10
        min_qty: 0.00
        name: partner_A
    international_status: product_attributes.int_1
-
  Product B
-
  !record {model: product.product, id: product_B}:
    name: ProdB
    seller_ids:
      - sequence: 10
        min_qty: 0.00
        name: partner_A
    international_status: product_attributes.int_1
-
  Create a Sale Order
-
  !record {model: sale.order, id: so_A7}:
    company_id: base.main_company
    date_order: '2011-04-13'
    invoice_quantity: order
    order_policy: manual
    partner_id: partner_A
    partner_invoice_id: address_A
    partner_order_id: address_A
    partner_shipping_id: address_A
    picking_policy: direct
    pricelist_id: product.list0
    shop_id: sale.shop
    priority: normal
    categ: medical
-
  Create a Sale Order Line
-
  !record {model: sale.order.line, id: sol_A7}:
    product_uom: product.product_uom_unit
    product_id: product_B
    order_id: so_A7
    price_unit: 1
    product_uom_qty: 10
    date_planned: '2011-04-13'
    type: make_to_order
-
  I change the procurement method for make_to_stock then back make_to_order in sourcing line
-
  !python {model: sale.order.line}: |
    obj = self.browse(cr, uid, ref("sol_A7"), context=context)
    self.pool.get('sourcing.line').write(cr, uid, [obj.sourcing_line_ids[0].id], {'type': 'make_to_stock'}, context=context)
    self.pool.get('sourcing.line').write(cr, uid, [obj.sourcing_line_ids[0].id], {'type': 'make_to_order'}, context=context)
-
  I change the product for product A (service with reception) in sale order line
-
  !python {model: sale.order.line}: |
    self.write(cr, uid, [ref("sol_A7")], {'product_id': ref("product_A")}, context=context)
-
  I change the procurement method for make_to_stock should fail
-
  !python {model: sale.order.line}: |
    from osv import osv
    obj = self.browse(cr, uid, ref("sol_A7"), context=context)
    try:
      self.pool.get('sourcing.line').write(cr, uid, [obj.sourcing_line_ids[0].id], {'type': 'make_to_stock'}, context=context)
    except osv.except_osv, e:
      # ok the constraint has been raised
      #print e
      pass
    else:
      assert False, 'The constraint: "You must select on order procurement method for Service with Reception products." has not been triggered.'
