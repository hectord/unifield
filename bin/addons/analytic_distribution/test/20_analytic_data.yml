-
  I create an analytic Correction Journal
-
  !record {model: account.analytic.journal, id: analytic_journal_correction}:
    name: Analytic Correction Journal
    code: ACOR
    type: correction
-
  I create an Expense Account Type.
-
  !record {model: account.account.type, id: account_account_type_expense0}:
    close_method: unreconciled
    code: expense
    name: Expense
    sign: 1
-
  I create a 6101 Expense Account.
-
  !record {model: account.account, id: account_account_expense0}:
    code: '6101-expense-test'
    company_id: base.main_company
    currency_mode: current
    name: Expense Account
    type: other
    user_type: account_account_type_expense0
    activation_date: !eval datetime.today().strftime('%Y-01-01')
    default_destination_id: analytic_distribution.analytic_account_destination_operation
    destination_ids: [analytic_distribution.analytic_account_destination_operation, analytic_distribution.analytic_account_destination_support]
-
  I create a 6102 Expense Account.
-
  !record {model: account.account, id: account_6102}:
    code: '6102-expense-test'
    company_id: base.main_company
    currency_mode: current
    name: Expense Account
    type: other
    user_type: account_account_type_expense0
    activation_date: !eval datetime.today().strftime('%Y-01-01')
    default_destination_id: analytic_distribution.analytic_account_destination_operation
    destination_ids: [analytic_distribution.analytic_account_destination_operation, analytic_distribution.analytic_account_destination_support]
-
  I create a link between 6101 expense account and Operation destination
-
  !record {model: account.destination.link, id: tuple_operation_6101}:
    account_id: account_account_expense0
    destination_id: analytic_distribution.analytic_account_destination_operation
-
  I create a link between 6101 expense account and Support destination
-
  !record {model: account.destination.link, id: tuple_support_6101}:
    account_id: account_account_expense0
    destination_id: analytic_distribution.analytic_account_destination_support
-
  I create a link between 6102 expense account and Operation destination
-
  !record {model: account.destination.link, id: tuple_operation_6102}:
    account_id: account_account_expense0
    destination_id: analytic_distribution.analytic_account_destination_operation
-
  I create a link between 6102 expense account and Support destination
-
  !record {model: account.destination.link, id: tuple_support_6102}:
    account_id: account_account_expense0
    destination_id: analytic_distribution.analytic_account_destination_support
-
  I create an analytic account attached to OC (Operation Center) named Gabon
-
  !record {model: account.analytic.account, id: analytic_account_gabon}:
    name: "Gabon"
    currency_id: 1
    code: GAB
    type: normal
    category: OC
    parent_id: analytic_distribution.analytic_account_project
    date: !eval "'%s-01-01' %(datetime.now().year + 2)"
-
  I create a CC analytic account attached to OC (Operation Center)
-
  !record {model: account.analytic.account, id: analytic_cc}:
    name: "CC"
    currency_id: 1
    code: CC
    type: normal
    category: OC
    parent_id: analytic_distribution.analytic_account_project
    date: !eval "'%s-01-01' %(datetime.now().year + 2)"
-
  I create an FP analytic account named Gabon Hospital attached to Gabon CC
-
  !record {model: account.analytic.account, id: analytic_account_fp_gabon_hospital}:
    name: "Gabon Hospital"
    currency_id: 1
    code: GABH
    type: normal
    category: FUNDING
    parent_id: analytic_distribution.analytic_account_funding_pool
    date: !eval "'%s-01-01' %(datetime.now().year + 2)"
    cost_center_ids: [analytic_account_gabon]
    tuple_destination_account_ids: [tuple_operation_6101, tuple_operation_6102]
-
  I create an FP analytic account named Kenya AIDS attached to Kenya CC
-
  !record {model: account.analytic.account, id: analytic_account_fp_kenya_aids}:
    name: "Kenya AIDS"
    currency_id: 1
    code: KENA
    type: normal
    category: FUNDING
    parent_id: analytic_distribution.analytic_account_funding_pool
    date: !eval "'%s-01-01' %(datetime.now().year + 2)"
    cost_center_ids: [analytic_cc]
    tuple_destination_account_ids: [tuple_support_6101, tuple_support_6102]
-
  I create a global analytical distribution
-
  !record {model: analytic.distribution, id: global_distrib_1}:
    name: GLOB DISTR 1
-
  I create a cost center distribution line for gabon
-
  !record {model: cost.center.distribution.line, id: cost_center_gabon}:
    name: CC Line 1
    amount: 0.0
    percentage: 75.0
    currency_id: 1
    analytic_id: analytic_account_gabon
    distribution_id: global_distrib_1
    destination_id: analytic_distribution.analytic_account_destination_operation
-
  I create a cost center distribution line for kenya
-
  !record {model: cost.center.distribution.line, id: cost_center_kenya}:
    name: CC Line 2
    amount: 0.0
    percentage: 25.0
    currency_id: 1
    analytic_id: analytic_cc
    distribution_id: global_distrib_1
    destination_id: analytic_distribution.analytic_account_destination_support
-
  I create a funding pool distribution line for gabon
-
  !record {model: funding.pool.distribution.line, id: funding_pool_gabon}:
    name: FP Line 1
    amount: 0.0
    percentage: 75.0
    currency_id: 1
    analytic_id: analytic_account_fp_gabon_hospital
    distribution_id: global_distrib_1
    cost_center_id: analytic_account_gabon
    destination_id: analytic_distribution.analytic_account_destination_operation
-
  I create a funding pool distribution line for kenya
-
  !record {model: funding.pool.distribution.line, id: funding_pool_kenya}:
    name: FP Line 2
    amount: 0.0
    percentage: 25.0
    currency_id: 1
    analytic_id: analytic_account_fp_kenya_aids
    cost_center_id: analytic_cc
    destination_id: analytic_distribution.analytic_account_destination_support
    distribution_id: global_distrib_1
-
  I create a fiscalyear
-
  !record {model: account.fiscalyear, id: fiscalyear0}:
    code: !eval "'FY%s'% (datetime.now().year+10)"
    company_id: base.main_company
    date_start: !eval "'%s-01-01' %(datetime.now().year+10)"
    date_stop: !eval "'%s-12-31' %(datetime.now().year+10)"
    name: !eval "'Fiscal Year %s' %(datetime.now().year+10)"
-
  I create the period 1
-
  !record {model: account.period, id: period1}:
    company_id: base.main_company
    date_start: !eval time.strftime('%Y-%m-01')
    date_stop: !eval (DateTime.now()+DateTime.RelativeDateTime(day=-1,years=10)).strftime('%Y-%m-%d')
    fiscalyear_id: fiscalyear0
    name: JAN-HHHHH-OP
    special: 1
-
  I create a Receivable Account Type.
-
  !record {model: account.account.type, id: account_account_type_receivable0}:
    close_method: balance
    code: receivable
    name: Receivable
    sign: 1
-
  I create an Analytic Expenses Journal.
-
  !record {model: account.analytic.journal, id: account_analytic_journal_expenses_0}:
    code: expense
    company_id: base.main_company
    name: Analytic Expenses Journal (test)
    type: purchase
-
  I create an Expenses Journal.
-
  !record {model: account.journal, id: account_journal_expenses_0}:
    code: expense
    company_id: base.main_company
    name: Expenses Journal (test)
    type: purchase
    allow_date: 0
    analytic_journal_id: account_analytic_journal_expenses_0
-
  I create Supplier 401 Payable Account.
-
  !record {model: account.account, id: account_account_payable_supplier0}:
    code: '401-supplier-test'
    company_id: base.main_company
    currency_mode: current
    name: Supplier Payable Account
    type: payable
    user_type: account_account_type_receivable0
    reconcile: 1
    type_for_register: none
    activation_date: !eval time.strftime('%Y-01-01')
-
  I create CC1 analytic account without any ending date (begin from 3 of this month)
-
  !record {model: account.analytic.account, id: cc1}:
    name: "Cost Center 1"
    code: CC1
    type: normal
    category: OC
    date_start: !eval "'%s-%s-03' % (datetime.now().year + 10, datetime.now().month)"
-
  I create CC2 analytic account with dates between 3 and 10 of the month
-
  !record {model: account.analytic.account, id: cc2}:
    name: Cost Center 2
    code: CC2
    type: normal
    category: OC
    date_start: !eval "'%s-%s-03' % (datetime.now().year + 10, datetime.now().month)"
    date: !eval "'%s-%s-13' % (datetime.now().year + 10, datetime.now().month)"
-
  I create CC3 analytic account without any ending date (begin from 15 of this month)
-
  !record {model: account.analytic.account, id: cc3}:
    name: Cost Center 3
    code: CC3
    type: normal
    category: OC
    date_start: !eval "'%s-%s-15' % (datetime.now().year + 10, datetime.now().month)"
-
  I create CC4 analytic account without any ending date (begin from 3 of this month)
-
  !record {model: account.analytic.account, id: cc4}:
    name: "Cost Center 4"
    code: CC4
    type: normal
    category: OC
    date_start: !eval "'%s-03-03' % (datetime.now().year)"
-
  I create CC5 analytic account without any ending date (begin from 15 of this month)
-
  !record {model: account.analytic.account, id: cc5}:
    name: Cost Center 5
    code: CC5
    type: normal
    category: OC
    date_start: !eval "'%s-03-15' % (datetime.now().year)"
-
  I create FP1 analytic account
-
  !record {model: account.analytic.account, id: fp1}:
    name: Funding Pool 1
    code: FP1
    type: normal
    category: FUNDING
    date_start: !eval "'%s-%s-03' % (datetime.now().year + 10, datetime.now().month)"
    date: !eval "'%s-%s-10' % (datetime.now().year + 10, datetime.now().month)"
    cost_center_ids: [cc1, cc2, cc3, cc4, cc5]
    tuple_destination_account_ids: [tuple_operation_6101, tuple_operation_6102]
-
  I create an analytic distribution.
-
  !record {model: analytic.distribution, id: distrib_2}:
    name: Distribution for checking dates, valid dates
-
  I add some lines to this distribution. First CC.
-
  !record {model: cost.center.distribution.line, id: cost_center_1}:
    name: CC Line 1
    analytic_id: cc1
    destination_id: analytic_account_destination_operation
    distribution_id: distrib_2
    percentage: 100.0
    currency_id: base.EUR
-
  Then I create a FP line linked to previous CC.
-
  !record {model: funding.pool.distribution.line, id: funding_pool_line_1}:
    name: FP Line 1
    analytic_id: analytic_account_msf_private_funds
    destination_id: analytic_account_destination_operation
    distribution_id: distrib_2
    cost_center_id: cc1
    percentage: 100.0
    currency_id: base.EUR
-
  I create another analytic distribution.
-
  !record {model: analytic.distribution, id: distrib_3}:
    name: Distribution for checking dates, INVALID dates
-
  I add some lines to this distribution. First CC.
-
  !record {model: cost.center.distribution.line, id: cost_center_2}:
    name: CC Line 1
    analytic_id: cc2
    destination_id: analytic_account_destination_operation
    distribution_id: distrib_3
    percentage: 100.0
    currency_id: base.EUR
-
  Then I create a FP line linked to previous CC.
-
  !record {model: funding.pool.distribution.line, id: funding_pool_line_2}:
    name: FP Line 1
    analytic_id: analytic_account_msf_private_funds
    destination_id: analytic_account_destination_operation
    distribution_id: distrib_3
    cost_center_id: cc2
    percentage: 100.0
    currency_id: base.EUR
-
  I create distrib_4 analytic distribution.
-
  !record {model: analytic.distribution, id: distrib_4}:
    name: Distribution for checking reverse and correction
-
  I add some lines to this distribution. First CC.
-
  !record {model: cost.center.distribution.line, id: cost_center_4}:
    name: CC Line 1
    analytic_id: cc4
    destination_id: analytic_account_destination_operation
    distribution_id: distrib_4
    percentage: 100.0
    currency_id: base.EUR
-
  Then I create a FP line linked to previous CC.
-
  !record {model: funding.pool.distribution.line, id: funding_pool_line_4}:
    name: FP Line 1
    analytic_id: analytic_account_msf_private_funds
    destination_id: analytic_account_destination_operation
    distribution_id: distrib_4
    cost_center_id: cc4
    percentage: 100.0
    currency_id: base.EUR
-
  I create a Partner Category named "Supplier".
-
  !record {model: res.partner.category, id: res_partner_category_supplier_0}:
    name: Supplier
-
  I create a Partner Category which are under "Supplier".
-
  !record {model: res.partner.category, id: res_partner_category_miscellaneous_supplier_0}:
    name: Miscellaneous Supplier
    parent_id: res_partner_category_supplier_0
-
  I create a Supplier named "Wood Supplier".
-
  !record {model: res.partner, id: res_partner_supplier_wood_0}:
    name: "Wood Supplier"
    category_id: 
      - res_partner_category_miscellaneous_supplier_0
    supplier: 1
-
  I create an address
-
  !record {model: res.partner.address, id: res_partner_address_tempo}:
    name: Maurice MORETTI
    street: 9, rue du Parc
    zip: 67205
    city: Oberhausbergen
    phone: +33 3 88 56 82 10
    email: info@tempo-consulting.fr
    partner_id: res_partner_supplier_wood_0
-
  I create a product to be used in some invoices
-
  !record {model: product.product, id: product_basic_finance_0}:
    categ_id: product.cat0
    cost_method: average
    mes_type: fixed
    name: Basic product for finance tests
    price_margin: 2.0
    procure_method: make_to_stock
    seller_delay: '1'
    standard_price: 12.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    seller_ids:
      - sequence: 10
        min_qty: 0.00
        name: res_partner_supplier_wood_0
    international_status: product_attributes.int_1
-
  I overwrite periods to have the right number
-
  !python {model: account.period}: |
    import datetime
    period_ids = self.search(cr, uid, [], order='date_start, name')
    for p in self.browse(cr, uid, period_ids):
      self.write(cr, uid, [p.id], {'number': int(datetime.datetime.strptime(p.date_start, '%Y-%m-%d').strftime('%m'))})
