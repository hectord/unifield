-
    In order to test the purchase_compare_rfq module,
    I will create products, suppliers and RfQ
    Next, I check each steps of the comparison
    and check that good values are generated in Purchase Orders
-
    I create 3 partners
-
    I create supplier S1
-
  !record {model: res.partner, id: supplier1}:
    name: S1
    supplier: True
-
    I create the address for S1
-
  !record {model: res.partner.address, id: address1}:
    name: S1
    partner_id: supplier1
-
    I create the supplier S2
-
  !record {model: res.partner, id: supplier2}:
    name: S2
    supplier: True
-
    I create the address for S2
-
  !record {model: res.partner.address, id: address2}:
    name: S2
    partner_id: supplier2
-
    I create the supplier S3
-
  !record {model: res.partner, id: supplier3}:
    name: S3
    supplier: True
-
    I create the address for S3
-
  !record {model: res.partner.address, id: address3}:
    name: S3
    partner_id: supplier3
-
    In order to test the procurement list module, I start by creating a new product category
-
  !record {model: product.category, id: product_cat1}:
    name: Categ1
-
    I create the product P1
-
  !record {model: product.product, id: product1}:
    categ_id: product_cat1
    cost_method: standard
    mes_type: fixed
    name: P1
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    seller_ids:
      - sequence: 10
        min_qty: 0.00
        name: supplier1
      - sequence: 20
        min_qty: 0.00
        name: supplier2
      - sequence: 30
        min_qty: 0.00
        name: supplier3
    international_status: product_attributes.int_1
-
    I create a second product, P2
-
  !record {model: product.product, id: product2}:
    categ_id: product_cat1
    cost_method: standard
    mes_type: fixed
    name: P2
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    seller_ids:
      - sequence: 10
        min_qty: 0.00
        name: supplier2
      - sequence: 20
        min_qty: 0.00
        name: supplier1
    international_status: product_attributes.int_1
-
    I create the product P3
-
  !record {model: product.product, id: product3}:
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: P3
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit    
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    seller_ids:
      - sequence: 10
        min_qty: 0.00
        name: supplier3
    international_status: product_attributes.int_1
-
    I create the three RfQs
-
    First one RfQ
-
  !record {model: purchase.order, id: rfq1}:
    company_id: base.main_company
    date_order: !eval time.strftime('%Y-%m-%d')
    invoice_method: order
    location_id: stock.stock_location_stock
    partner_address_id: address1
    partner_id: supplier1
    pricelist_id: purchase.list0
-
    I create a line for P1 in RfQ 1
-
  !record {model: purchase.order.line, id: rfq1_line1}:
    product_uom: product.product_uom_unit
    product_id: product1
    order_id: rfq1
    price_unit: 1.30
    product_qty: 10
    name: P1
    date_planned: !eval time.strftime('%Y-%m-%d')
-
    I create a line for P2 in RfQ 2
-
  !record {model: purchase.order.line, id: rfq1_line2}:
    product_uom: product.product_uom_unit
    product_id: product2
    order_id: rfq1
    price_unit: 1.75
    product_qty: 20
    name: P2
    date_planned: !eval time.strftime('%Y-%m-%d')
-
    I create a line for P3 in RfQ 3
-
  !record {model: purchase.order.line, id: rfq1_line3}:
    product_uom: product.product_uom_unit
    product_id: product3
    order_id: rfq1
    price_unit: 2.17
    product_qty: 30
    name: P3
    date_planned: !eval time.strftime('%Y-%m-%d')
-
    Second RfQ
-
  !record {model: purchase.order, id: rfq2}:
    company_id: base.main_company
    date_order: !eval time.strftime('%Y-%m-%d')
    invoice_method: order
    location_id: stock.stock_location_stock
    partner_address_id: address2
    partner_id: supplier2
    pricelist_id: purchase.list0
-
    I create a line for P1 in RfQ 1
-
  !record {model: purchase.order.line, id: rfq2_line1}:
    product_uom: product.product_uom_unit
    product_id: product1
    order_id: rfq2
    price_unit: 1.40
    product_qty: 10
    name: P1
    date_planned: !eval time.strftime('%Y-%m-%d')
-
    I create a line for P3 in RfQ 3
-
  !record {model: purchase.order.line, id: rfq2_line3}:
    product_uom: product.product_uom_unit
    product_id: product3
    order_id: rfq2
    price_unit: 2.20
    product_qty: 30
    name: P3
    date_planned: !eval time.strftime('%Y-%m-%d')
-
    Third RfQ
-
  !record {model: purchase.order, id: rfq3}:
    company_id: base.main_company
    date_order: !eval time.strftime('%Y-%m-%d')
    invoice_method: order
    location_id: stock.stock_location_stock
    partner_address_id: address3
    partner_id: supplier3
    pricelist_id: purchase.list0
-
    I create a line for P1 in RfQ 1
-
  !record {model: purchase.order.line, id: rfq3_line1}:
    product_uom: product.product_uom_unit
    product_id: product1
    order_id: rfq3
    price_unit: 1.50
    product_qty: 10
    name: P1
    date_planned: !eval time.strftime('%Y-%m-%d')
-
    I create a line for P2 in RfQ 2
-
  !record {model: purchase.order.line, id: rfq3_line2}:
    product_uom: product.product_uom_unit
    product_id: product2
    order_id: rfq3
    price_unit: 1.60
    product_qty: 20
    name: P2
    date_planned: !eval time.strftime('%Y-%m-%d')
-
    I create a line for P3 in RfQ 3
-
  !record {model: purchase.order.line, id: rfq3_line3}:
    product_uom: product.product_uom_unit
    product_id: product3
    order_id: rfq3
    price_unit: 2.10
    product_qty: 20
    name: P3
    date_planned: !eval time.strftime('%Y-%m-%d')
