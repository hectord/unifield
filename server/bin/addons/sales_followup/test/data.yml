-
  In order to test Sales Order Follow-up, I create initial data
-
  I create a supplier
-
  !record {model: res.partner, id: supplier1}:
    name: Supplier 1
    supplier: True
    partner_type: external
-
  I create an address for Supplier 1
-
  !record {model: res.partner.address, id: supplier1_addr}:
    name: SupplierÂ 1
    partner_id: supplier1
-
  I create a customer
-
  !record {model: res.partner, id: customer1}:
    name: Customer 1
    customer: True
    partner_type: internal
-
  I create an address for Customer 1
-
  !record {model: res.partner.address, id: customer1_addr}:
    name: Customer 1
    partner_id: customer1
-
  I create a product category
-
  !record {model: product.category, id: prod_cat1}:
    name: Categ1
-
    I create the product P1
-
  !record {model: product.product, id: product1}:
    categ_id: prod_cat1
    cost_method: standard
    mes_type: fixed
    name: P1
    price_margin: 2.0
    procure_method: make_to_order
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 75000.00
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    seller_ids:
      - sequence: 10
        min_qty: 0.00
        name: supplier1
    international_status: product_attributes.int_1
-
    I create a second product, P2
-
  !record {model: product.product, id: product2}:
    categ_id: prod_cat1
    cost_method: standard
    mes_type: fixed
    name: P2
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    international_status: product_attributes.int_1
-
    I create the product P3
-
  !record {model: product.product, id: product3}:
    categ_id: prod_cat1
    cost_method: standard
    mes_type: fixed
    name: P3
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit    
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    international_status: product_attributes.int_1
-
    I create the product P4
-
  !record {model: product.product, id: product4}:
    categ_id: prod_cat1
    cost_method: standard
    mes_type: fixed
    name: P4
    price_margin: 2.0
    procure_method: make_to_order
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 7200.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    seller_ids:
      - sequence: 10
        min_qty: 0.00
        name: supplier1
    international_status: product_attributes.int_1
-
  I create Physical Inventory for the products.
-
   !record {model: stock.inventory, id: stock_inventory_physicalinventoy0}:
    company_id: base.main_company
    date: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    date_done: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    inventory_line_id:
      - company_id: base.main_company
        location_id: stock.stock_location_stock
        product_id: product3
        product_qty: 2000.0
        product_uom: product.product_uom_unit
    name: Physical inventory
    state: draft
-
  I confirm the Inventory for P3
-
  !python {model: stock.inventory}: |
   self.action_confirm(cr,uid,[ref('stock_inventory_physicalinventoy0')])
   self.action_done(cr,uid,[ref('stock_inventory_physicalinventoy0')])
