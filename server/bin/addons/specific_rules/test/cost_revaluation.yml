-
  In order to test the product revaluation, we will create a new revaluation doc and confirm it
- 
  Creating a product.nomenclature record
- 
  !record {model: product.nomenclature, id: product_nomenclature_reval0}:
    name: test
- 
  Creating a product.nomenclature record
- 
  !record {model: product.nomenclature, id: product_nomenclature_reval1}:
    level: 1
    name: test1
    parent_id: product_nomenclature_reval0
- 
  Creating a product.nomenclature record
- 
  !record {model: product.nomenclature, id: product_nomenclature_reval2}:
    level: 2
    name: test2
    parent_id: product_nomenclature_reval1
- 
  Creating a product.nomenclature record
- 
  !record {model: product.nomenclature, id: product_nomenclature_reval3}:
    level: 3
    name: test3
    parent_id: product_nomenclature_reval2
- 
  Creating a product.category record
-
  !record {model: product.category, id: product_category_reval0}:
    name: Reval0
    family_id: product_nomenclature_reval2
- 
  Creating a product.product record
- 
  !record {model: product.product, id: product_product_reval0}:
    alert_time: 0.0
    categ_id: product.cat0
    cost_method: standard
    default_code: test1
    life_time: 0.0
    mes_type: fixed
    name: test product
    name_template: test product
    nomen_manda_0: product_nomenclature_reval0
    nomen_manda_1: product_nomenclature_reval1
    nomen_manda_2: product_nomenclature_reval2
    nomen_manda_3: product_nomenclature_reval3
    procure_method: make_to_stock
    removal_time: 0.0
    seller_delay: '1'
    seller_qty: 0.0
    standard_price: 1.0
    subtype: single
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    use_time: 0.0
    valuation: manual_periodic
    volume: 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    perishable: True
    international_status: product_attributes.int_1
-
  Creating a new revaluation doc
-
  !record {model: stock.cost.reevaluation, id: reeval1}:
    name: Test
    reevaluation_line_ids:
      - product_id: product_product_reval0
        average_cost: 35.00
-
  Check the price is not reevaluate
-
  !assert {model: product.product, id: product_product_reval0}:
    - standard_price == 1.00, "The standard price is reevaluate"
-
  Confirm the reevaluation doc
-
  !python {model: stock.cost.reevaluation}: |
    self.action_confirm(cr, uid, ref('reeval1'))
-
  Check the price is not reevaluate
-
  !assert {model: product.product, id: product_product_reval0}:
    - standard_price == 1.00, "The standard price is reevaluate"
-
  Validate the reevaluation doc
-
  !python {model: stock.cost.reevaluation}: |
    self.action_done(cr, uid, ref('reeval1'))
-
  Check the price is not reevaluate
-
  !assert {model: product.product, id: product_product_reval0}:
    - standard_price == 35.00, "The standard price is reevaluate"
