-
  In order to test the threshold value feature, I will create different products
  with different rules and test the behavior
-
  <---------------- Defining data ----------------> 
-
  <---------------- Defining supplier ---------------->
- 
  I create a supplier
-
  !record {model: res.partner, id: supplier1}:
    name: Supplier 1
    supplier: True
-
    I create an address for Supplier 1
-
  !record {model: res.partner.address, id: addr_supplier1}:
    name: Supplier 1
    partner_id: supplier1
-
  <---------------- Defining product categories ---------------->
-
  I create cat1
-
  !record {model: product.category, id: cat1}:
    name: Categ1
-
  I create cat2
-
  !record {model: product.category, id: cat2}:
    name: Categ2
-
  <---------------- Defining products ---------------->
-
  I create product1
- 
  !record {model: product.product, id: product1}:
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: Product 1
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    reviewed_consumption: 45
    international_status: product_attributes.int_1
-
  I create product2
- 
  !record {model: product.product, id: product2}:
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: Product 2
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    reviewed_consumption: 45
    international_status: product_attributes.int_1
-
  I create product3
- 
  !record {model: product.product, id: product3}:
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: Product 3
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    reviewed_consumption: 45
    international_status: product_attributes.int_1
-
  I create product4
- 
  !record {model: product.product, id: product4}:
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: Product 4
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    reviewed_consumption: 45
    international_status: product_attributes.int_1
-
  I create product5
- 
  !record {model: product.product, id: product5}:
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: Product 5
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    reviewed_consumption: 45
    international_status: product_attributes.int_1
-
  I create product6
- 
  !record {model: product.product, id: product6}:
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: Product 6
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    reviewed_consumption: 45
    international_status: product_attributes.int_1
-
  I create product7
- 
  !record {model: product.product, id: product7}:
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: Product 7
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    reviewed_consumption: 45
    international_status: product_attributes.int_1
-
  I create product8
- 
  !record {model: product.product, id: product8}:
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: Product 8
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    reviewed_consumption: 45
    seller_ids:
      - sequence: 10
        min_qty: 0.00
        name: supplier1
        delay: 30
    international_status: product_attributes.int_1
-
  I create product9
- 
  !record {model: product.product, id: product9}:
    categ_id: cat1
    cost_method: standard
    mes_type: fixed
    name: Product 9
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    reviewed_consumption: 45
    international_status: product_attributes.int_1
-
  I create product10
- 
  !record {model: product.product, id: product10}:
    categ_id: cat1
    cost_method: standard
    mes_type: fixed
    name: Product 10
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    reviewed_consumption: 45
    international_status: product_attributes.int_1
-
  I create product11
- 
  !record {model: product.product, id: product11}:
    categ_id: cat2
    cost_method: standard
    mes_type: fixed
    name: Product 11
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    reviewed_consumption: 45
    international_status: product_attributes.int_1
-
  I create product12
- 
  !record {model: product.product, id: product12}:
    categ_id: cat2
    cost_method: standard
    mes_type: fixed
    name: Product 12
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 100.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    reviewed_consumption: 45
    international_status: product_attributes.int_1
-
  I create a stock move for product1 to have an AMC different than 0.00
-
  !record {model: stock.move, id: sm_amc1}:
    product_id: product1
    product_uom: product.product_uom_unit
    date_expected: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    date: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    product_qty: 150.00
    location_id: stock.stock_location_stock
    location_dest_id: stock.stock_location_customers
    reason_type_id: reason_types_moves.reason_type_deliver_partner
    type: out
    name: AMC for product 1
-
 I confirm the stock move
-
  !python {model: stock.move}: |
    self.action_confirm(cr, uid, [ref('sm_amc1')], context=context)
    self.action_done(cr, uid, [ref('sm_amc1')], context=context)
-
  I create a stock move for product2 to have an AMC different than 0.00
-
  !record {model: stock.move, id: sm_amc2}:
    product_id: product2
    product_uom: product.product_uom_unit
    date_expected: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    date: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    product_qty: 150.00
    location_id: stock.stock_location_stock
    location_dest_id: stock.stock_location_customers
    reason_type_id: reason_types_moves.reason_type_deliver_partner
    type: out
    name: AMC for product 2
-
 I confirm the stock move
-
  !python {model: stock.move}: |
    self.action_confirm(cr, uid, [ref('sm_amc2')], context=context)
    self.action_done(cr, uid, [ref('sm_amc2')], context=context)
-
  I create a stock move for product3 to have an AMC different than 0.00
-
  !record {model: stock.move, id: sm_amc3}:
    product_id: product3
    product_uom: product.product_uom_unit
    date_expected: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    date: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    product_qty: 150.00
    location_id: stock.stock_location_stock
    location_dest_id: stock.stock_location_customers
    reason_type_id: reason_types_moves.reason_type_deliver_partner
    type: out
    name: AMC for product 3
-
 I confirm the stock move
-
  !python {model: stock.move}: |
    self.action_confirm(cr, uid, [ref('sm_amc3')], context=context)
    self.action_done(cr, uid, [ref('sm_amc3')], context=context)
-
  I create a stock move for product4 to have an AMC different than 0.00
-
  !record {model: stock.move, id: sm_amc4}:
    product_id: product4
    product_uom: product.product_uom_unit
    date_expected: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    date: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    product_qty: 150.00
    location_id: stock.stock_location_stock
    location_dest_id: stock.stock_location_customers
    reason_type_id: reason_types_moves.reason_type_deliver_partner
    type: out
    name: AMC for product 4
-
 I confirm the stock move
-
  !python {model: stock.move}: |
    self.action_confirm(cr, uid, [ref('sm_amc4')], context=context)
    self.action_done(cr, uid, [ref('sm_amc4')], context=context)
-
  I create a stock move for product5 to have an AMC different than 0.00
-
  !record {model: stock.move, id: sm_amc5}:
    product_id: product5
    product_uom: product.product_uom_unit
    date_expected: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    date: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    product_qty: 150.00
    location_id: stock.stock_location_stock
    location_dest_id: stock.stock_location_customers
    reason_type_id: reason_types_moves.reason_type_deliver_partner
    type: out
    name: AMC for product 5
-
 I confirm the stock move
-
  !python {model: stock.move}: |
    self.action_confirm(cr, uid, [ref('sm_amc5')], context=context)
    self.action_done(cr, uid, [ref('sm_amc5')], context=context)
-
  I create a stock move for product6 to have an AMC different than 0.00
-
  !record {model: stock.move, id: sm_amc6}:
    product_id: product6
    product_uom: product.product_uom_unit
    date_expected: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    date: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    product_qty: 150.00
    location_id: stock.stock_location_stock
    location_dest_id: stock.stock_location_customers
    reason_type_id: reason_types_moves.reason_type_deliver_partner
    type: out
    name: AMC for product 6
-
 I confirm the stock move
-
  !python {model: stock.move}: |
    self.action_confirm(cr, uid, [ref('sm_amc6')], context=context)
    self.action_done(cr, uid, [ref('sm_amc6')], context=context)
-
  I create a stock move for product7 to have an AMC different than 0.00
-
  !record {model: stock.move, id: sm_amc7}:
    product_id: product7
    product_uom: product.product_uom_unit
    date_expected: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    date: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    product_qty: 150.00
    location_id: stock.stock_location_stock
    location_dest_id: stock.stock_location_customers
    reason_type_id: reason_types_moves.reason_type_deliver_partner
    type: out
    name: AMC for product 7
-
 I confirm the stock move
-
  !python {model: stock.move}: |
    self.action_confirm(cr, uid, [ref('sm_amc7')], context=context)
    self.action_done(cr, uid, [ref('sm_amc7')], context=context)
-
  I create a stock move for product8 to have an AMC different than 0.00
-
  !record {model: stock.move, id: sm_amc8}:
    product_id: product8
    product_uom: product.product_uom_unit
    date_expected: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    date: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    product_qty: 150.00
    location_id: stock.stock_location_stock
    location_dest_id: stock.stock_location_customers
    reason_type_id: reason_types_moves.reason_type_deliver_partner
    type: out
    name: AMC for product 8
-
 I confirm the stock move
-
  !python {model: stock.move}: |
    self.action_confirm(cr, uid, [ref('sm_amc8')], context=context)
    self.action_done(cr, uid, [ref('sm_amc8')], context=context)
-
  I create a stock move for product9 to have an AMC different than 0.00
-
  !record {model: stock.move, id: sm_amc9}:
    product_id: product9
    product_uom: product.product_uom_unit
    date_expected: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    date: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    product_qty: 150.00
    location_id: stock.stock_location_stock
    location_dest_id: stock.stock_location_customers
    reason_type_id: reason_types_moves.reason_type_deliver_partner
    type: out
    name: AMC for product 9
-
 I confirm the stock move
-
  !python {model: stock.move}: |
    self.action_confirm(cr, uid, [ref('sm_amc9')], context=context)
    self.action_done(cr, uid, [ref('sm_amc9')], context=context)
-
  I create a stock move for product10 to have an AMC different than 0.00
-
  !record {model: stock.move, id: sm_amc10}:
    product_id: product10
    product_uom: product.product_uom_unit
    date_expected: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    date: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    product_qty: 150.00
    location_id: stock.stock_location_stock
    location_dest_id: stock.stock_location_customers
    reason_type_id: reason_types_moves.reason_type_deliver_partner
    type: out
    name: AMC for product 10
-
 I confirm the stock move
-
  !python {model: stock.move}: |
    self.action_confirm(cr, uid, [ref('sm_amc10')], context=context)
    self.action_done(cr, uid, [ref('sm_amc10')], context=context)
-
  I create a stock move for product11 to have an AMC different than 0.00
-
  !record {model: stock.move, id: sm_amc11}:
    product_id: product11
    product_uom: product.product_uom_unit
    date_expected: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    date: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    product_qty: 150.00
    location_id: stock.stock_location_stock
    location_dest_id: stock.stock_location_customers
    reason_type_id: reason_types_moves.reason_type_deliver_partner
    type: out
    name: AMC for product 11
-
 I confirm the stock move
-
  !python {model: stock.move}: |
    self.action_confirm(cr, uid, [ref('sm_amc11')], context=context)
    self.action_done(cr, uid, [ref('sm_amc11')], context=context)
-
  I create a stock move for product12 to have an AMC different than 0.00
-
  !record {model: stock.move, id: sm_amc12}:
    product_id: product12
    product_uom: product.product_uom_unit
    date_expected: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    date: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    product_qty: 150.00
    location_id: stock.stock_location_stock
    location_dest_id: stock.stock_location_customers
    reason_type_id: reason_types_moves.reason_type_deliver_partner
    type: out
    name: AMC for product 12
-
 I confirm the stock move
-
  !python {model: stock.move}: |
    self.action_confirm(cr, uid, [ref('sm_amc12')], context=context)
    self.action_done(cr, uid, [ref('sm_amc12')], context=context)
-
  I create an inventory
-
  !record {model: stock.inventory, id: inv1}:
    company_id: base.main_company
    date: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    date_done: !eval time.strftime('%Y-%m-%d %H:%M:%S')
    inventory_line_id:
      - company_id: base.main_company
        location_id: stock.stock_location_stock
        product_id: product1
        product_qty: 100.0
        product_uom: product.product_uom_unit
      - company_id: base.main_company
        location_id: stock.stock_location_stock
        product_id: product2
        product_qty: 170.0
        product_uom: product.product_uom_unit
      - company_id: base.main_company
        location_id: stock.stock_location_stock
        product_id: product3
        product_qty: 300.0
        product_uom: product.product_uom_unit
      - company_id: base.main_company
        location_id: stock.stock_location_stock
        product_id: product4
        product_qty: 200.00
        product_uom: product.product_uom_unit
      - company_id: base.main_company
        location_id: stock.stock_location_stock
        product_id: product5
        product_qty: 100.00
        product_uom: product.product_uom_unit
      - company_id: base.main_company
        location_id: stock.stock_location_stock
        product_id: product6
        product_qty: 200.0
        product_uom: product.product_uom_unit
      - company_id: base.main_company
        location_id: stock.stock_location_stock
        product_id: product7
        product_qty: 300.0
        product_uom: product.product_uom_unit
      - company_id: base.main_company
        location_id: stock.stock_location_stock
        product_id: product8
        product_qty: 100.0
        product_uom: product.product_uom_unit
      - company_id: base.main_company
        location_id: stock.stock_location_stock
        product_id: product9
        product_qty: 100.0
        product_uom: product.product_uom_unit
      - company_id: base.main_company
        location_id: stock.stock_location_stock
        product_id: product10
        product_qty: 300.0
        product_uom: product.product_uom_unit
      - company_id: base.main_company
        location_id: stock.stock_location_stock
        product_id: product11
        product_qty: 100.0
        product_uom: product.product_uom_unit
      - company_id: base.main_company
        location_id: stock.stock_location_stock
        product_id: product12
        product_qty: 300.0
        product_uom: product.product_uom_unit
    name: Physical inventory
    state: draft
-
  I confirm the Inventory
-
  !python {model: stock.inventory}: |
   self.action_confirm(cr,uid,[ref('inv1')])
   self.action_done(cr,uid,[ref('inv1')])
