    
- 
  Creating a res.partner record
- 
  !record {model: res.partner, id: res_partner_a0}:
    credit_limit: 0.0
    debit_limit: 0.0
    name: A
    supplier: true
    
- 
  Creating a res.partner.address record
- 
  !record {model: res.partner.address, id: res_partner_address_0}:
    partner_id: res_partner_a0
    street: A
    
- 
  Creating a res.partner record
- 
  !record {model: res.partner, id: res_partner_b0}:
    credit_limit: 0.0
    debit_limit: 0.0
    name: B
    supplier: true
    
- 
  Creating a res.partner.address record
- 
  !record {model: res.partner.address, id: res_partner_address_1}:
    partner_id: res_partner_b0
    street: B
    
-
  Creating a product.product record
- 
  !record {model: product.product, id: product_product_p0}:
    standard_price: 1.0
    valuation: manual_periodic
    volume: 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    categ_id: product.cat0
    cost_method: standard
    mes_type: fixed
    name: P
    procure_method: make_to_stock
    standard_price: 160.0
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    international_status: product_attributes.int_1
    
-

  I create the locations and warehouse
  
-
  !record {model: stock.location, id: stock_location_0}:
    name: Input
    location_category: stock
    
-

  I create the locations and warehouse
  
-
    
  !record {model: stock.location, id: stock_location_1}:
    name: Stock
    location_category: stock
    
-

  I create the locations and warehouse
  
-
    
  !record {model: stock.location, id: stock_location_2}:
    name: Output
    location_category: stock
    
-

  I create the locations and warehouse
  
-
    
  !record {model: stock.warehouse, id: stock_warehouse_0}:
    name: Warehouse
    lot_input_id: stock_location_0
    lot_stock_id: stock_location_1
    lot_output_id: stock_location_2
    
-

  I create the order point, with stock as location
  
-

  !record {model: stock.warehouse.orderpoint, id: orderpoint_0}:
    name: Orderpoint
    warehouse_id: stock_warehouse_0
    product_id: product_product_p0
    product_uom: product.product_uom_unit
    location_id: stock_location_1
    product_min_qty: 500
    product_max_qty: 1000
    qty_multiple: 1
    active: True
    
-

  I run the scheduler
  
-

  !function {model: procurement.order, name: run_scheduler}:
    - model: procurement.order
      search: "[]"

-

  Test the procurement locatino
  
-


  !python {model: procurement.order}: |
    
    # look for the procurement corresponding to the created product, must be in exception
    pro_ids = self.search(cr, uid, [('product_id', '=', ref("product_product_p0"))], context=context)
    
    assert self.browse(cr, uid, pro_ids[0], context=context).location_id.id == ref("stock_location_0"), 'location of procurement is wrong, found %i, should be %i'%(self.browse(cr, uid, pro_ids[0], context=context).location_id.id,ref("stock_location_0")) 
    
