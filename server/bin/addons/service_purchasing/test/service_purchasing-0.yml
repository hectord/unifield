-
   I create a service location
-
  !record {model: stock.location, id: service_loc}:
     service_location: True
     name: TEST service Loc
- 
  Creating a res.partner record
- 
  !record {model: res.partner, id: res_partner_a0}:
    credit_limit: 0.0
    debit_limit: 0.0
    name: A
    supplier: true
    
- 
  Creating a res.partner.address record
- 
  !record {model: res.partner.address, id: res_partner_address_0}:
    partner_id: res_partner_a0
    street: A

-
  Creating a product.product record service with reception
- 
  !record {model: product.product, id: product_service_p0}:
    default_code: P0
    name: product 0 test
    type: service_recep
    procure_method: make_to_order
    international_status: product_attributes.int_1
- 
  Creating a product.product record service with reception
- 
  !record {model: product.product, id: product_service_recep_p1}:
    default_code: P1
    name: product 0 test
    type: service_recep
    procure_method: make_to_order
    international_status: product_attributes.int_1
- 
  Creating a product.product record stockable
- 
  !record {model: product.product, id: product_stockable_p2}:
    default_code: P11
    name: product 1 test
    type: product
    international_status: product_attributes.int_1
    
- 
  0. I create a purchase order with service category.
  I create a line with service with non service product.
  Exception is raised
  
  Creating a purchase.order record
- 
  !record {model: purchase.order, id: purchase_order_po00}:
    partner_id: res_partner_a0
    partner_address_id: res_partner_address_0
    pricelist_id: product.list0
    location_id: stock.stock_location_stock
    categ: service
    
- 
  Creating a purchase.order.line record for service product
- 
  !record {model: purchase.order.line, id: purchase_order_line_p00}:
    order_id: purchase_order_po00
    price_unit: 1.0
    product_id: product_service_p0
    product_uom: product.product_uom_unit
    
-

  I change the product for a stockable product in the line. An exception is raised.

-
  !python {model: purchase.order.line}: |
    from osv.osv import except_osv
    pol = self.browse(cr, uid, ref("purchase_order_line_p00"), context=context)
    try:
      pol.write({'product_id': ref("product_stockable_p2")}, context=None)
      self.pool.get('purchase.order').write(cr, uid, pol.order_id.id, {})
    except except_osv as e:
      assert False, 'The constraint about Purchase Order of type Category Service with not only Service products has been triggered'
      # ok the constraint is triggered
      #print e
      
