-
  In order to test the de-activation of a product,
  we will create a product and try to de-activate it
-
  Create the product P10
-
  !record {model: product.product, id: product10}:
    categ_id: product_cat1
    name: P10
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
-
  Then, we a create a tender
-
  !record {model: tender, id: tender2}:
    creation_date: !eval time.strftime('%Y-%m-%d')
    requested_date: !eval time.strftime('%Y-%m-%d')
    location_id: stock.stock_location_stock
    tender_line_ids:
      - product_id: product10
        qty: 1.0
        product_uom: product.product_uom_unit
    supplier_ids:
      - supplier1
-
  Generate RfQs from tender
-
  !python {model: tender}: |
    from osv import osv
    import netsvc
    wf_service = netsvc.LocalService("workflow")
    try:
      wf_service.trg_validate(uid, 'tender', ref("tender2"), 'button_generate', cr)
    except osv.except_osv, e:
      assert False, "Error raised"
-
  Then, we try to de-activate this product
-
  !python {model: product.product}: |
    res = self.deactivate_product(cr, uid, ref('product10'))
    assert type(res) == type({}) and res.get('res_model') == 'product.deactivation.error', "Error occured when the de-activation of the product"
