<?xml version="1.0" encoding="utf-8" ?>
<openerp>
    <data>
    
        <record id="act_sale_loan" model="workflow.activity">
            <field name="wkf_id" ref="sale.wkf_sale"/>
            <field name="name">loan</field>
            <field name="kind">subflow</field>
            <field name="subflow_id" search="[('osv','=','purchase.order')]" type="int"/>
            <field name="action">action_purchase_order_create()</field>
        </record>
        <record id="act_sale_loan_done" model="workflow.activity">
            <field name="wkf_id" ref="sale.wkf_sale" />
            <field name="name">loan_done</field>
        </record>

        <record id="act_sale_order_validated" model="workflow.activity">
            <field name="wkf_id" ref="sale.wkf_sale" />
            <field name="name">order_validated</field>
            <field name="kind">function</field>
            <field name="action">wkf_validated()</field>
        </record>

        <record id="trans_draft_validated" model="workflow.transition">
            <field name="act_from" ref="sale.act_draft" />
            <field name="act_to" ref="act_sale_order_validated" />
            <field name="signal">order_validated</field>
        </record>

        <record id="trans_draft_cancel" model="workflow.transition">
            <field name="act_from" ref="act_sale_order_validated"/>
            <field name="act_to" ref="sale.act_cancel"/>
            <field name="signal">cancel</field>
        </record>

        <record id="trans_sale_router_loan" model="workflow.transition">
            <field name="act_from" ref="sale.act_router" />
            <field name="act_to" ref="act_sale_loan" />
            <field name="condition">order_type=='loan' and not loan_id and not is_a_counterpart</field>
        </record>
        <record id="trans_sale_router_loan_done" model="workflow.transition">
            <field name="act_from" ref="sale.act_router" />
            <field name="act_to" ref="act_sale_loan_done" />
            <field name="condition">order_type!='loan' or loan_id or is_a_counterpart</field>
        </record>
        <record id="trans_sale_loan_done" model="workflow.transition">
            <field name="act_from" ref="act_sale_loan"/>
            <field name="act_to" ref="act_sale_loan_done"/>
            <field name="signal">subflow.done</field>
        </record>
        <record id="trans_sale_loand_done_end" model="workflow.transition">
            <field name="act_from" ref="act_sale_loan_done" />
            <field name="act_to" ref="sale.act_done" />
        </record>
        <record id="sale.trans_router_wait_invoice_shipping" model="workflow.transition">
            <field name="act_from" ref="sale.act_wait_invoice"/>
            <field name="act_to" ref="sale.act_invoice_end"/>
            <field name="condition">(order_policy=='picking') or order_type!='regular' or (order_type=='regular' and partner_id.partner_type=='internal')</field>
        </record>

        <!--<record id="sale.act_ship_corrected" model="workflow.activity">
            <field name="wkf_id" ref="sale.wkf_sale" />
            <field name="name">ship_corrected</field>
            <field name="kind">function</field>
            <field name="action">sale_except_correction()</field>
        </record>

        <record id="sale.trans_ship_except_ship_end" model="workflow.transition">
            <field name="act_from" ref="sale.act_ship_except" />
            <field name="act_to" ref="sale.act_ship_corrected" />-->
            <!--<field name="signal">ship_corrected</field>-->
            <!--            <field name="signal" eval="False" />
        </record>

        <record id="sale.trans_ship_corrected_ship_end" model="workflow.transition">
            <field name="act_from" ref="sale.act_ship_corrected" />
            <field name="act_to" ref="sale.act_ship" />
        </record>-->
        
        <!-- SPLIT STEP -->
        
        <record id="act_sale_order_split" model="workflow.activity">
            <field name="wkf_id" ref="sale.wkf_sale" />
            <field name="name">order_split</field>
            <field name="kind">function</field>
            <field name="action">wkf_split()</field>
        </record>
        
        <record id="trans_validated_split" model="workflow.transition">
            <field name="act_from" ref="act_sale_order_validated" />
            <field name="act_to" ref="act_sale_order_split" />
            <field name="signal">order_confirm</field>
            <field name="condition">split_type_sale_order == 'original_sale_order' and not from_yml_test</field>
        </record>
        
        <!-- new DONE STEP -->
        
        <record id="act_sale_order_split_done" model="workflow.activity">
            <field name="wkf_id" ref="sale.wkf_sale" />
            <field name="flow_stop">True</field>
            <field name="name">split_done</field>
            <field name="kind">function</field>
            <field name="action">wkf_split_done()</field>
        </record>
        
        <record id="trans_split_split_done" model="workflow.transition">
            <field name="act_from" ref="act_sale_order_split" />
            <field name="act_to" ref="act_sale_order_split_done" />
            <field name="condition">True</field>
        </record>
        
        <!-- SHIP_PROCUREMENT STEP -->
        
        <record id="act_sale_order_ship_procurement" model="workflow.activity">
            <field name="wkf_id" ref="sale.wkf_sale" />
            <field name="name">ship_procurement</field>
            <field name="kind">function</field>
            <field name="action">action_ship_proc_create()</field>
        </record>
        
        <record id="trans_validated_ship_procurement" model="workflow.transition">
            <field name="act_from" ref="act_sale_order_validated" />
            <field name="act_to" ref="act_sale_order_ship_procurement" />
            <field name="signal">order_confirm</field>
            <field name="condition">split_type_sale_order != 'original_sale_order' or from_yml_test</field>
        </record>
        
        <record id="trans_ship_procurement_router" model="workflow.transition">
            <field name="act_from" ref="act_sale_order_ship_procurement"/>
            <field name="act_to" ref="sale.act_router"/>
            <field name="condition">test_lines()</field>
        </record>
        
        <!-- MODIFY Transition so ship_procurement is always reached. yml backward compatibility, so procurement orders are created -->
        
        <record id="sale.trans_draft_router" model="workflow.transition">
            <field name="act_from" ref="sale.act_draft"/>
            <field name="act_to" ref="act_sale_order_ship_procurement"/>
            <field name="signal">order_confirm</field>
        </record>

    </data>
</openerp>
