-
  Import products in new list
-
  I create a wizard
-
  Run the import method
-
  !python {model: product.to.list}: |
    import1 = self.create(cr, uid, {'list_type': 'new', 'new_list_name': 'test import', 'new_list_type': 'list'}, context={'active_ids': [ref('product1'), ref('product4'), ref('product5')]})
    wiz_id = self.browse(cr, uid, import1)
    assert len(wiz_id.product_ids), "No products on import wizard, see the default get method of the product.to.list object"
    self.import_products(cr, uid, import1)
    list_ids = self.pool.get('product.list').search(cr, uid, [('name', '=', 'test import'), ('type', '=', 'list')])
    assert len(list_ids), "No new list created from the wizard"
-
  Import products in an existing list
-
  I create a wizard
-
  Run the import method
-
  !python {model: product.to.list}: |
    import2 = self.create(cr, uid, {'list_type': 'exist', 'list_id': ref('list1')}, context={'active_ids': [ref('product1'), ref('product4'), ref('product5')]})
    wiz_id = self.browse(cr, uid, import2)
    list1 = self.pool.get('product.list').browse(cr, uid, ref('list1'))
    nb_lines = list1.nb_products
    assert len(wiz_id.product_ids), "No products on import wizard, see the default get method of the product.to.list object"
    self.import_products(cr, uid, import2)
    list1 = self.pool.get('product.list').browse(cr, uid, ref('list1'))
    assert list1.nb_products > nb_lines, "No lines created on an existing list"
    # Check if the importation do not duplicate a line if the a line with the same product already exists in the list
    assert int(list1.nb_products) == int(nb_lines)+2, "A line with a product already in the list has been created"
