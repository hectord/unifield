-
  I create a product category
-
  !record {model: product.category, id: prod_cat1}:
    name: Categ1
-
    I create the product P1
-
  !record {model: product.product, id: product1}:
    categ_id: prod_cat1
    cost_method: standard
    mes_type: fixed
    name: P1
    price_margin: 2.0
    procure_method: make_to_order
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 12.00
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    seller_ids:
      - sequence: 10
        min_qty: 0.00
        name: res_partner_a0
    international_status: product_attributes.int_1
-
    I create the product P2
-
  !record {model: product.product, id: product2}:
    categ_id: prod_cat1
    cost_method: standard
    mes_type: fixed
    name: P2
    price_margin: 2.0
    procure_method: make_to_order
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 25.00
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    seller_ids:
      - sequence: 10
        min_qty: 0.00
        name: res_partner_a0
    international_status: product_attributes.int_1
-
    I create the product P3
-
  !record {model: product.product, id: product3}:
    categ_id: prod_cat1
    cost_method: standard
    mes_type: fixed
    name: P3
    price_margin: 2.0
    procure_method: make_to_order
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 30.00
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    seller_ids:
      - sequence: 10
        min_qty: 0.00
        name: res_partner_b0
    international_status: product_attributes.int_1
-
    I create the product P4
-
  !record {model: product.product, id: product4}:
    categ_id: prod_cat1
    cost_method: standard
    mes_type: fixed
    name: P4
    price_margin: 2.0
    procure_method: make_to_stock
    property_stock_inventory: stock.location_inventory
    property_stock_procurement: stock.location_procurement
    property_stock_production: stock.location_production
    seller_delay: '1'
    standard_price: 70.00
    supply_method: buy
    type: product
    uom_id: product.product_uom_unit
    uom_po_id: product.product_uom_unit
    volume : 0.0
    warranty: 0.0
    weight: 0.0
    weight_net: 0.0
    international_status: product_attributes.int_1
-
  I create a sale order for this 4 products
-
  !record {model: sale.order, id: so1}:
    name: Regular1
    company_id: base.main_company
    picking_policy: direct
    order_policy: manual
    invoice_quantity: order
    partner_order_id: res_partner_address_0
    partner_invoice_id: res_partner_address_0
    partner_shipping_id: res_partner_address_0
    partner_id: res_partner_a0
    pricelist_id: product.list0
    order_type: regular
    order_line:
      - name: P1
        price_unit: 5000
        product_uom: product.product_uom_unit
        product_uom_qty: 5.0
        state: draft
        delay: 7.0
        product_id: product1
        product_uos_qty: 5.0
        th_weight: 0.0
        type: make_to_order
      - name: P4
        price_unit: 5000
        product_uom: product.product_uom_unit
        product_uom_qty: 2.0
        state: draft
        delay: 7.0
        product_id: product4
        product_uos_qty: 2.0
        th_weight: 0.0
        type: make_to_stock
      - name: P2
        price_unit: 200
        product_uom: product.product_uom_unit
        product_uom_qty: 1.0
        state: draft
        delay: 7.0
        product_id: product2
        product_uos_qty: 1.0
        th_weight: 0.0
        type: make_to_order
      - name: P3
        price_unit: 100
        product_uom: product.product_uom_unit
        product_uom_qty: 3.0
        state: draft
        delay: 7.0
        product_id: product3
        product_uos_qty: 3.0
        th_weight: 0.0
        type: make_to_order
-
  I confirm this sale order
-
  !workflow {model: sale.order, action: order_confirm, ref: so1}
-
  I run the scheduler
-
  !python {model: procurement.order}: |
    self.run_scheduler(cr, uid)
-
  I check if a PO lines has been created
-
  !python {model: purchase.order.line}: |
    p4_line_ids = self.search(cr, uid, [('product_id', '=', ref('product4'))])
    assert not p4_line_ids, "A line has been created for the product P4"
    p1_line_ids = self.search(cr, uid, [('product_id', '=', ref('product1'))])
    assert len(p1_line_ids) == 1, "No line created for the product P1"
    p2_line_ids = self.search(cr, uid, [('product_id', '=', ref('product2'))])
    assert len(p2_line_ids) == 1, "No line created for the product P2"
    p3_line_ids = self.search(cr, uid, [('product_id', '=', ref('product3'))])
    assert len(p3_line_ids) == 1, "NO line created for the product P3"

    p1_line = self.browse(cr, uid, p1_line_ids[0])
    p2_line = self.browse(cr, uid, p2_line_ids[0])
    p3_line = self.browse(cr, uid, p3_line_ids[0])
    assert p1_line.order_id.id == p2_line.order_id.id, "The system has generated 2 PO for P1 and P2 instead of only one"
    assert p3_line.order_id.id != p1_line.order_id.id, "The system has generated one PO for P1 and P3 instead of 2"
